name: CI
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: ruby -e 'puts File.read("README.md").scan(/```yml(.*?)```/m)' | tee docker-compose.yml
      - run: docker-compose up -d
      - run: npx wait-on http://localhost:8080
      - run: npm i puppeteer-core make-promises-safe
      - run: |
          export PUPPETEER_EXECUTABLE_PATH="$(which google-chrome)"
          echo $PUPPETEER_EXECUTABLE_PATH
          node << 'EOF'
            require('make-promises-safe');
            const puppeteer = require('puppeteer-core');
            (async () => {
              const browser = await puppeteer.launch({
                executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,
              });
              const page = await browser.newPage();
              await page.setViewport({ width: 1280, height: 720 });
              await page.goto('http://localhost:8080/vnc.html?autoconnect=true');
              await new Promise(r => setTimeout(r, 10000));
              await page.screenshot({path: '/tmp/screenshot.png'});
              await browser.close();
            })();
          EOF
      - name: Upload screenshot as artifact
        uses: actions/upload-artifact@v1
        with:
          name: screenshot
          path: /tmp/screenshot.png
